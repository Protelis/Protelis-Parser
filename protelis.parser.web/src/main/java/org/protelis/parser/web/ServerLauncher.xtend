/*
 * generated by Xtext 2.36.0
 */
package org.protelis.parser.web

import java.net.InetSocketAddress
import org.eclipse.jetty.annotations.AnnotationConfiguration
import org.eclipse.jetty.server.Server
import org.eclipse.jetty.webapp.MetaInfConfiguration
import org.eclipse.jetty.webapp.WebAppConfiguration
import org.eclipse.jetty.webapp.WebAppContext
import org.eclipse.jetty.webapp.WebInfConfiguration
import org.eclipse.jetty.webapp.WebXmlConfiguration
import org.slf4j.Logger
import org.slf4j.LoggerFactory

/**
 * This program starts an HTTP server for testing the web integration of your DSL.
 * Just execute it and point a web browser to http://localhost:8080/
 */
class ServerLauncher {
	
	static final Logger LOG = LoggerFactory.getLogger(ServerLauncher);
	
	def static void main(String[] args) {
		val server = new Server(new InetSocketAddress('localhost', 8080))
		server.handler = new WebAppContext => [
			resourceBase = 'src/main/webapp'
			welcomeFiles = #["index.html"]
			contextPath = "/"
			configurations = #[
				new AnnotationConfiguration,
				new WebXmlConfiguration,
				new WebInfConfiguration,
				new MetaInfConfiguration,
				new WebAppConfiguration
			]
			setAttribute(MetaInfConfiguration.CONTAINER_JAR_PATTERN, '.*/protelis\\.parser\\.web/.*,.*\\.jar')
			setInitParameter("org.eclipse.jetty.servlet.Default.useFileMappedBuffer", "false")
		]
		try {
			server.start
			LOG.info('Server started ' + server.getURI + '...')
			new Thread[
				LOG.info('Press enter to stop the server...')
				val key = System.in.read
				if (key != -1) {
					server.stop
				} else {
					LOG.warn('Console input is not available. In order to stop the server, you need to cancel process manually.')
				}
			].start
			server.join
		} catch (Exception exception) {
			LOG.warn(exception.message)
			System.exit(1)
		}
	}
}
