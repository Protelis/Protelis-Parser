name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  # Runs all tests
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows, macos, ubuntu ]
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - uses: DanySK/build-check-deploy-gradle-action@4.0.3
        with:
          retries-on-failure: 3
          build-command: >-
            ./gradlew build --parallel
          check-command: true
          deploy-command: >-
            ./gradlew
            publishAllPublicationsToProjectLocalRepository
            zipMavenCentralPortalPublication releaseMavenCentralPortalPublication
            --dry-run
          should-run-codecov: ${{ runner.os == 'Linux' }}
          should-deploy: >-
            ${{
              runner.os == 'Linux'
              && !github.event.repository.fork
              && github.event_name != 'pull_request'
            }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  # Performs a release if needed
  release:
    permissions:
      contents: write
    needs:
      - build
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && github.event_name != 'pull_request'
    concurrency:
      group: release-${{ github.event.number || github.ref }}
      cancel-in-progress: false
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          submodules: recursive
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Install Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version-file: package.json
      - uses: DanySK/build-check-deploy-gradle-action@4.0.3
        with:
          retries-on-failure: 1
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ secrets.DEPLOYMENT_TOKEN }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
